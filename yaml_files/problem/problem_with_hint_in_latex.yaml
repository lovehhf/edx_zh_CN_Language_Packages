---
metadata:
    display_name: Latex中带自适应提示的问题
    source_code: |
        \subsection{Problem With Adaptive Hint}

        % Adaptive hints are messages provided to students which depend on
        % student input.  These hints are produced using a script embedded
        % within the problem (written in Python).
        %
        % Here is an example.  This example uses LaTeX as a high-level
        % soure language for the problem.  The problem can also be coded
        % directly in XML.

        这个问题演示了一个问题,基于使用{\tt hintfn} method.

        \begin{edXscript}
        def test_str(expect, ans):
          print expect, ans
          ans = ans.strip("'")
          ans = ans.strip('"')
          return expect == ans.lower()

        def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
          aid = answer_ids[0]
          ans = str(student_answers[aid]).lower()
          print 'hint_fn called, ans=', ans
          hint = ''
          if 'java' in ans:
             hint = 'that is only good for drinking'
          elif 'perl' in ans:
             hint = 'not that rich'
          elif 'pascal' in ans:
             hint = 'that is a beatnick language'
          elif 'fortran' in ans:
             hint = 'those were the good days'
          elif 'clu' in ans:
             hint = 'you must be invariant'
          if hint:
            hint = "<font color='blue'>Hint: {0}</font>".format(hint)
            new_cmap.set_hint_and_mode(aid,hint,'always')
        \end{edXscript}

        现在最好的编程语言是什么?你可以输入你的答案大写或小写,有或没有引号。

        \edXabox{type="custom" cfn='test_str' expect='python' hintfn='hint_fn'}
    markdown: !!null
data: |
    <problem>
      <text>
        <p>
          <h4>Problem With Adaptive Hint</h4>
        </p>
        <p>
    This problem demonstrates a question with hints, based on using the <tt class="tt">hintfn</tt> method. </p>
        <script type="text/python" system_path="python_lib">
    def test_str(expect, ans):
      print expect, ans
      ans = ans.strip("'")
      ans = ans.strip('"')
      return expect == ans.lower()

    def hint_fn(answer_ids, student_answers, new_cmap, old_cmap):
      aid = answer_ids[0]
      ans = str(student_answers[aid]).lower()
      print 'hint_fn called, ans=', ans
      hint = ''
      if 'java' in ans:
         hint = 'that is only good for drinking'
      elif 'perl' in ans:
         hint = 'not that rich'
      elif 'pascal' in ans:
         hint = 'that is a beatnick language'
      elif 'fortran' in ans:
         hint = 'those were the good days'
      elif 'clu' in ans:
         hint = 'you must be invariant'
      if hint:
        hint = "&lt;font color='blue'&gt;Hint: {0}&lt;/font&gt;".format(hint)
        new_cmap.set_hint_and_mode(aid,hint,'always')
    </script>
        <label>
         现在最好的编程语言是什么?你可以输入你的答案大写或小写,有或没有引号。
          <customresponse cfn="test_str" expect="python">
            <textline correct_answer="python"/>
            <hintgroup hintfn="hint_fn"/>
          </customresponse>
        </label>
      </text>
    </problem>
